@model Umtahan_programii.Models.Exam

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Exam</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <label asp-for="SubjectCode" class="control-label"></label>
            <select asp-for="SubjectCode" class="form-control" asp-items="ViewBag.Subjects"></select>

            <label asp-for="StudentId" class="control-label"></label>
            <select asp-for="StudentId" class="form-control" asp-items="ViewBag.Students"></select>

            <div class="form-group">
                <label asp-for="DateOfExam" class="control-label"></label>
                <input asp-for="DateOfExam" class="form-control" />
                <span asp-validation-for="DateOfExam" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FinalResult" class="control-label"></label>
                <input asp-for="FinalResult" class="form-control" />
                <span asp-validation-for="FinalResult" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var subjectSelect = $("#SubjectCode");
        var studentSelect = $("#StudentId");

        var studentSubjectMapping = @Html.Raw(Json.Serialize(ViewBag.StudentSubjectMapping));

        subjectSelect.on("change", function () {
            var selectedSubject = $(this).val();
            var selectedClass = subjectSelect.find("option:selected").data("class"); // Get the class of the selected subject

            studentSelect.empty();
            studentSelect.append($('<option>', {
                value: "",
                text: "Select a student",
                class: "text-muted",
                disabled: true,
                selected: true
            }));

            if (selectedSubject) {
                var studentsForSubject = studentSubjectMapping.filter(function (item) {
                    return item.SubjectCode === selectedSubject && item.Class === selectedClass;
                });

                studentsForSubject.forEach(function (student) {
                    studentSelect.append($('<option>', {
                        value: student.Student.StudentId,
                        text: student.Student.FullName
                    }));
                });
            }
        });

        subjectSelect.trigger("change");
    });
</script>
